/* Selectors with specificity */

/* Estilo por defecta para todos los elementos div */
div {
    color: blue;
}

/*Se volvera rojo cualquier clase con highlight pero no se ve aplicada ya que mas adelante hay una declaracion que se sobrepone al ser un llamado al id*/
.highlight {
    color: red;
}

/* Aqui estoy llamando a una clase al empezar con .(nombre de la clase) */
.copy-cat {
    color: rgb(107, 55, 55);
}

/* El "#" se refiere a id, al ser algo mas especifico se aplicara sobre las clases, cosa que pasa aqui, por eso mismo los elementos
box con highlight son vistos verde al tener la id special */
#special{
    color: green;
}

/* Color gris claro para el body en general */
body {
    background-color: #f0f0f0;
}

/*Toda clase que tenga box se le aplicara la aqui declarado, una caja con sombra, padding y margin*/
.box {
    background-color: #ffffff;
    border: 2px solid #000;
    box-shadow: 5px 5px 10px rgba(0, 0, 0, 0.5);
    /*Padding manejo el espacio entre mi borde y el contenido interno*/
    padding: 20px;
    /*Mientras margin es el espaco desde mi borde a el contenido externo (imaginario no visible)*/
    margin: 10px;
}

/* Contenedor para la clase content especifico con ancho, borde grueso y padding */
.content{
    width: 300px;
    padding: 20px;
    margin: 10px;
    border: 5px solid #333;
}

.inline-block{
    /*inline-block hace que el elemento se mantenga en la linea donde se encuentra, no yendo a una nueva linea como es el caso de block
    pero al ser block ocupara el espacio que se le indica (fijo) no unicamente el de su contenido*/
    display: inline-block;
    width: 100px;
    height: 100px;
    background-color: lightblue;
}

.fixed-box {
    /*position: fixed en CSS hace que un elemento se posicione respecto a la ventana gráfica del navegador y se mantenga en una posición fija
    , incluso cuando el usuario se desplaza por la página. Es como si el elemento estuviera "pegado" a la pantalla,
    en una ubicación específica que define el desarrollado. Explicacion generado por AI de google en la busqueda*/
    position: fixed;
    top: 10px;
    right: 10px;
    background-color: red;
    padding: 10px;
}

/*Rota la caja y la da color especial, aplica a elementos declarado con clase rotate.box*/
.rotate-box{
    width: 100px;
    height: 100px;
    background-color: yellow;
    transform: rotate(45deg);
}

/* Aqui me refiero a cualquier elemento a (link), lo hara naranja al interactuar con el y le dara underline (aun que ya tiene default)*/
a:hover {
    color: rgb(255, 60, 0);
    text-decoration: underline;
}

/*Antes de cada elemento clase caja aparece un New!*/
.box::before{
    content: "New!";
    color: red;
    font-weight: bold;
}

/* Clase que aplica la animacion de aparicion progresiva */
.fade-in{
    animation: fade 4s ease-in-out;
}

/* Definicion de la animación "fade" (opacidad de 0 a 1) */
@keyframes fade{
    0%{
        opacity: 0;
    }
    100%{
        opacity: 1;
    }
}

/*Los comentarios aqui y en el html son tanto como documentacion como nota para mi misma, por eso algunas estan mas especificadas que otra
el objetivo es que estas entregas y sus comentarios de documentacion sean utiles para mi en la Prueba de desempeño*/