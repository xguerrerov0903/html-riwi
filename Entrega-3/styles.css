/* Primer bloque de código CSS */
body {
    font-family: Arial, sans-serif;
    /*Visible en el footer*/
    margin: 0;
    padding: 0;
    /*El tamaño de los elementos sumana al margin y padding*/
    box-sizing: border-box;
}

header {
    background-color: #333;
    color: white;
    display: flex;
    /*Distribuye los elementos hijos dejando espacio entre ellos 
    (el primero a la izquierda -header- y el ultimo a la derecha -nav-)*/
    justify-content: space-between;
    /*Alinea los elementos al centro (vertical)*/
    align-items: center;
    /*El relleno interno y (10px arriba y abajo) x (20px a los lados)*/
    padding: 10px 20px;
}

.nav-list {
    /*Declarado asi solo hace que tenga los elementos default de flex
    por lo tanto la navegacion sera: row, nowrap. Solo estos porque header declarado mas
    arriba y el cual pertene nav declara otras cosas*/
    display: flex;
    list-style: none;
}

/*Especificacion que se puede poner simplenente en su elemento a*/
/*nav ul li {
    margin: 0 15px;
}*/

.nav-list a {
    /*Quitar el formato default de a*/
    margin: 0 15px;
    color: white;
    text-decoration: none;
}

main {
    padding: 20px;
}

/*CSS con Flex*/
/*grid-container {
    display: flex;
    justify-content: space-between;
    gap: 20px;
}*/

.grid-container{
    display: grid;
    /*3 columnas iguales medidas todas*/
    grid-template-columns: repeat(3, 1fr);
    /*Margenes entre elementos*/
    gap: 20px;
}

.grid-item {
    background-color: #f4f4f4;
    padding: 20px;
    border: 1px solid #ccc;
    text-align: center;
    /*Lo indica al flexbox que este elemento ocupara todo el espacio disponible en su contendor 
    (no va demas, no va demenos)*/
    flex: 1;
}

/*--------Para permitir el responsive----------*/

/*Creo un diseño responsivos para pantallas menores a 768 px*/
@media (max-width: 768px) {
    .grid-container {
        /*Cambia a que ahora sean 2 columnas en lugar de 3*/
        grid-template-columns: repeat(2, 1fr);
    }

    nav ul {
        /*Cambia la direccion a columnas ya que default esta por row*/
        flex-direction: column;
    }

    body {
        /*Simplemente para evideciar el cambio implicitamente aplicando el diseño responsivo*/
        background-color: rgb(255, 247, 222);
    }
}
/*Diseño para pantallas menores a 480 px*/
@media (max-width: 480px) {
    /*Ahora los items se mostraran a una solo columana al existir solo una*/
    .grid-container {
        grid-template-columns: 1fr;
    }

    header {
        flex-direction: column;
        /*Aparte de ahora organizarce por columnas tambien cambiar para estar alineados a la izquierda (el inicio)*/
        align-items: flex-start;
    }

    nav ul {
        /*Ahora en vez del default row, los elementos estaran en column*/
        flex-direction: column;
        /* Ahora el menu se alinea a la izquierda*/
        align-items: flex-start;
    }

    body {
        /*Simplemente para evideciar el cambio implicitamente*/
        /*Layout adaptable*/
        background-color: rgb(222, 250, 255);
    }
}